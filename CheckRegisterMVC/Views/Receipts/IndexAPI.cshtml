@{
    ViewBag.Title = "Home Page";
}

<script src="~/Scripts/angular.js"></script>

<script type="text/javascript">
    var apiRegistered = true;
    var baseURL = "/api/apireceipts"
    var App = angular.module('App', []);


    //All Receipts
    App.controller('ReceiptsCtrl', function ($scope, $http) {
        

        $scope.loadAll = function () {
            $http.get(baseURL)
          .then(function (res) {
              // Storing the json data object as 'receipts'
              $scope.receipts = res.data;
              $scope.display = true;
          });
        }
        $scope.loadSingleReceipt = function (id) {
            console.log("updating");
            $http({
                url: baseURL + '/' + id,

            }).then(function (res) {
                $scope.display = false;
                loadSingleReceipt(res.data);
                //IF error set $scope.error to error and it will show
                $scope.display = false;
            });
        };

        $scope.deleteReceipt = function (id) {
            $http.delete(baseURL + '/' + id).then(function (res) {
                $scope.loadAll();
            }
            , function (res) {
                //fail of promise or http?
            });
        };
        $scope.show = function () {
            $scope.display = true;
        }

        $scope.hide = function () {
            console.log('hiding');
            $scope.display = false;
            //don't understand the need for apply here.
            $scope.$apply();
        }
        $scope.loadAll();

    });

    //Create
    App.controller('CreateReceiptCtrl', function ($scope, $http) {
        $scope.newReceipt = new Receipt();

        $scope.add = function () {
            console.log("updating");
            if (!$scope.validateCategory())
            {
                $scope.error = true;
                return;
            }
                
            if ($scope.newReceipt.ID)
            {
                console.log($scope.newReceipt.ID)
                $scope.update();
                return;
            }
            $http.post(baseURL, JSON.stringify($scope.newReceipt), {
            }).then(function (res) {
                
                console.log(res);
                $("#createReceipt").hide();
                reloadList();
            });
        };

        $scope.update = function () {
            console.log("in updated");
            var payload = JSON.stringify($scope.newReceipt);
            //PutReceipt
            $http.put(baseURL + '/' + $scope.newReceipt.ID, payload, $scope.newReceipt, {

            }).then(function (res) {
                console.log('result of save was ' + res);
                reloadList();
                $("#createReceipt").hide();
            });

        }


        $scope.edit = function (data) {
            console.log("edit");
            $scope.error = false;
            $("#createReceipt").show();
            $scope.newReceipt = data;
        }

        $scope.createReceipt = function () {

            console.log("in create receipt");
            //If you  set the new receipt before showing the form, the form will not update your gonna have a bad time 
            $("#createReceipt").show();
            $scope.newReceipt = new Receipt();
            $scope.active = false;
            console.log($scope.active);
            $scope.error = false;
            console.log('should always be one on create ' + $scope.newReceipt.Categories.length);
            //call apply, not sure why you have to. Probably because the form is not on the page
            //http://jimhoskins.com/2012/12/17/angularjs-and-apply.html
            $scope.$apply();
        }
        $scope.addCategory = function () {
            $scope.newReceipt.Categories.push(new Category);
            
        }

        $scope.removeCategory = function (catToRemove) {
            var indexOfCat = $scope.newReceipt.Categories.indexOf(catToRemove);
            $scope.newReceipt.Categories.splice(indexOfCat, 1);
        }

        $scope.validateCategory = function()
        {
            console.log('validating');
            var catTotal = 0;
            for (var i = 0; i <= $scope.newReceipt.Categories.length-1; i++)
            {
                catTotal = catTotal+  $scope.newReceipt.Categories[i].Amount + 0
            }
            console.log(catTotal)
            return (catTotal == $scope.newReceipt.Amount || $scope.newReceipt.Categories.length == 0)
        }

        $scope.cancel = function () {
            //$scope.show = false;
            angular.element($('#listView')[0]).scope().loadAll();
            $("#createReceipt").hide();
        }

    });


    function reloadList()
    {
        //this is not the right way to do it. there should be a service or something to handle inter controller
        //communication
        angular.element($('#listView')[0]).scope().loadAll();
    }

    function addComplete()
    {
        reloadList();
        $('#ReceiptsCtrl').show();
        //$('#createReceipt').hide();
    }

    function loadAllReceipts()
    {
        $.ajax({
            url: baseURL,

        }).done(allReceiptsLoaded);
    }

    //http://localhost:18271//api/apireceipts/11
    //Outside of list controler because we need to load in detail
    function loadSingleReceipt(data)
    {
        angular.element($('#createReceipt')[0]).scope().edit(data);
    }

    function newReceipt()
    {
        angular.element($('#createReceipt')[0]).scope().createReceipt();
        angular.element($('#listView')[0]).scope().hide();
    }

    function allReceiptsLoaded(payload)
    {
        console.log(payload);
    }

    function apiReady()
    {
        console.log("API Ready");
        //loadAllAngularReceipts();
    }

    function closeView(ref)
    {
        //this only works if we have same page structure
        console.log("closing edit");
        console.log($("#" + ref))
        $("#" + ref).hide();
        
    }

    function Receipt()
    {
        this.ID; 
        this.AccountNumber = "55";
        this.TransactionDate = "11/7/2015";
        this.TransactionType = 1
        this.StoreName = "Menards"
        this.Amount = 55.00;
        this.Approver = "Larry";
        this.Categories = [new Category()];
    }

    function Category()
    {
        this.ID
        this.Description ="Houshold"
        this.Amount = 55.00;
    }

</script>
<div class="jumbotron">
    <h2>CJB Sample Project - Angular</h2>
    
</div>
<div ng-app="App">

    <div id="listView" ng-controller="ReceiptsCtrl" ng-show="display" >
        <table class="table">
            <tr>
                <th>AccountNumber</th>
                <th>Transaction Date</th>
                <th>Transaction Type</th>
                <th>Store Name</th>
                <th>Amount</th>
                <th>Approver</th>
                <th>Actions</th>
            </tr>
            <tr ng-repeat="Receipt in receipts">
                <td>{{Receipt.AccountNumber}} : {{Receipt.ID}}</td>
                <td>{{Receipt.TransactionDate | date:'MM/dd/yyyy'}}</td>
                <td>{{Receipt.TransactionType}}</td>
                <td>{{Receipt.StoreName}}</td>
                <td>{{Receipt.Amount}}</td>
                <td>{{Receipt.Approver}}</td>
                <td><a ng-click="loadSingleReceipt(Receipt.ID);">Edit</a><img style="padding-left: 5px;"  ng-click="deleteReceipt(Receipt.ID)" src="~/images/icons/delete.png" /></td>
            </tr>
        </table>
    </div>

    <!-- messy, we should have two controlers for edit / create with shared code-->
    <div id="createReceipt" ng-controller="CreateReceiptCtrl" style="display: none; width: 600px">
        <p style="font-weight: bold;">Create / Edit Receipt</p>
   
        <table>

        </table>
             <p class="formLine">ID:<span ng-bind="newReceipt.ID"></span></p>
        <p class="formLine">Transaction Date:<input type="text" ng-model="newReceipt.TransactionDate"  /></p>
        <p class="formLine">
            Transaction Type:<input type="number" ng-model="newReceipt.TransactionType"  />
        <p class="formLine">
            Account Number:<input type="text" ng-model="newReceipt.AccountNumber" />
        <p class="formLine">
            Store Name:<input type="text"ng-model="newReceipt.StoreName"  />
        <p class="formLine">
            Amount:<input type="number" ng-model="newReceipt.Amount"  />
        <p class="formLine">
            Approver:<input type="text" ng-model="newReceipt.Approver"  />
        <div id="categories" style="border-width: 1px;">
            
            <p style="font-weight: bold; margin-top: 10px;">Categories</p>
            <p ng-repeat="Category in newReceipt.Categories">
                
                Description:<input type="text" ng-model="Category.Description"  />
                Amount:<input type="number" ng-model="Category.Amount" />
                <img ng-click="removeCategory(Category)" src="~/images/icons/delete.png" />

            </p>
            <a ng-click="addCategory()">Add Category</a>
            <p class="formLine" style="color: red;" ng-show="error">Amounts of all categories must == Amount</p>
            <p style="text-align: center; padding-top: 10px;">
                <a ng-click="cancel();" >Cancel</a>
                <a style="margin-left: 20px;" ng-click="add()">Save</a>
            </p>
        </div>

    </div>
</div>




<div class="row">
    <div class="col-md-4">
        <a onclick="newReceipt();" >new</a>
    </div>
</div>